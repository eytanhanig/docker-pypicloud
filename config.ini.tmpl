[app:main]
use = egg:pypicloud

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en

pypi.default_read = {{ getv "/pypi/default/read" }}
pypi.cache_update = {{ getv "/pypi/cache/update" }}

# Storage Type
pypi.storage = {{ getv "/pypi/storage" }}

# Filesystem
storage.dir = {{ getv "/pypi/storage/dir" }}

# S3 Storage
storage.bucket = {{ getv "/pypi/storage/bucket" }}
storage.aws_access_key_id = accesskeyid
storage.aws_secret_access_key = secretaccesskey
storage.calling_format = OrdinaryCallingFormat

pypi.db = {{ getv "/pypi/db" }}
db.url = {{ getv "/pypi/db/url" }}

pypi.fallback = {{ getv "/pypi/fallback" }}
pypi.fallback_url = {{ getv "/pypi/fallback/url" }}
pypi.always_show_upstream = {{ getv "/pypi/always/show/upstream" }}

{{ $admins := split (getv "/pypi/admins") "," }}
auth.admins =
  admin
  {{ range $admins }}{{ . }}
  {{ end }}

user.admin = {{ getv "/pypi/admin/password" }}

{{range gets "/pypi/auth/user/*"}}{{ $user := split (.Key) "/" }}
user.{{ index $user 4 }} = {{ .Value }}
{{end}}

# For beaker
session.encrypt_key = {{ getv "/pypi/session/encrypt/key" }}
session.validate_key = {{ getv "/pypi/session/validate/key" }}
session.secure = {{ getv "/pypi/session/secure" }}
session.invalidate_corrupt = true

###
# wsgi server configuration
###

[uwsgi]
paste = config:%p
paste-logger = %p
master = true
processes = {{ getv "/pypi/processes" }}
reload-mercy = 15
worker-reload-mercy = 15
max-requests = 1000
enable-threads = true
{{if getv "/pypi/ssl/key"}}
https = {{ getv "/pypi/http" }},{{ getv "/pypi/ssl/crt" }},{{ getv "/pypi/ssl/key" }}
{{else}}
http = {{ getv "/pypi/http" }}
{{end}}
virtualenv = /env

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, botocore, pypicloud

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_pypicloud]
level = DEBUG
qualname = pypicloud
handlers =

[logger_botocore]
level = WARN
qualname = botocore
handlers =

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)s %(asctime)s [%(name)s] %(message)s
